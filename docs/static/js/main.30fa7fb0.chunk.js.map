{"version":3,"sources":["components/AddCategory.js","helpers/getFifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAS,IAAD,EAE3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAiBZM,GAjBY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OACI,sBAAKc,UAAU,2CAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAIrB,ECLyB,SAACA,GAEzB,MAA2Bd,mBAAU,CAClCqB,KAAM,GACNa,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAERxB,EAAQC,GACPwB,MAAK,SAAAC,GAAI,OAEFH,EAAU,CACNf,KAAMkB,EACNL,SAAS,SAIrB,CAACpB,IAIGqB,EDjByBK,CAAc1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAGtB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEgBlBgB,EAlCO,WAElB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAUA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCrB7B6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.30fa7fb0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value);        \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        //console.log('submit hecho: ', e);\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(categ =>  [inputValue, ...categ ]);\r\n            setInputValue('');        \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange}\r\n            ></input>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes  = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category, ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=VYtGyY7zMJ7vWP886F9EHFzWNFr2zOua`;\r\n\r\n    const resp = await fetch(url);\r\n    //if (resp.ok)\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>  {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n \r\n    return gifs;\r\n}","import React from \"react\";\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    //console.log(url);\r\n\r\n    return (\r\n        <div className=\"card  animate__animated animate__fadeIn \">\r\n           <img src={url} alt={title} />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGifs'; \r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n\r\n    const { data: images, loading} = useFetchGifts(category);\r\n\r\n \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>       \r\n\r\n        {loading && <p className=\"animate__animated animate__flash\" >Cargando...</p>} \r\n\r\n        <div className=\"card-grid\">\r\n                 \r\n            {\r\n                images.map( (img) => (                \r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                    />                    \r\n                ))\r\n            }                    \r\n        </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport {getGifs} from '../helpers/getFifs';\r\n\r\nexport const useFetchGifts = (category) => {\r\n\r\n     const [state, setState] =  useState( {\r\n        data: [],\r\n        loading: true\r\n     });\r\n\r\n     useEffect( () => {\r\n\r\n        getGifs(category)\r\n        .then(imgs =>  \r\n             \r\n                setState( {\r\n                    data: imgs ,\r\n                    loading: false\r\n                })                                  \r\n         ); \r\n    \r\n     }, [category]);\r\n\r\n\r\n\r\n     return state; // {data:[], loading: true }\r\n\r\n}\r\n\r\n\r\n","import React, {Fragment, useState }  from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     if (!categories.includes('HunterXHunter')){\r\n    //         //setCategories( ['HunterXHunter' ,...categories]); //esta forma es la mas simple y funciona\r\n    //         setCategories(  categ =>  [...categ, 'HunterXHunter']); //esta forma tmb es v√°lida\r\n    //     }        \r\n    // }\r\n \r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            \r\n            \r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                         \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                        /> \r\n                    ))\r\n                }                \r\n            </ol>        \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp  from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>, \n    document.getElementById('root')\n);\n\n "],"sourceRoot":""}